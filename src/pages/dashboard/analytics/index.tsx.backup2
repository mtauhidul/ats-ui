import { useState, useMemo } from "react";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle, CardAction } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, AreaChart, Area, LineChart, Line, PieChart, Pie, Cell } from "recharts";
import { 
  IconUsers, IconBriefcase, IconFileText, IconTrendingUp, IconTrendingDown, 
  IconClock, IconCheck, IconUserCheck, IconUserX, IconMail, IconCalendar,
  IconTarget, IconAward, IconBuildingCommunity, IconChartBar
} from "@tabler/icons-react";
import applicationsData from "@/lib/mock-data/applications.json";
import candidatesData from "@/lib/mock-data/candidates.json";
import jobsData from "@/lib/mock-data/jobs.json";
import clientsData from "@/lib/mock-data/clients.json";

export default function AnalyticsPage() {
  const [timeRange, setTimeRange] = useState("30");

  const stats = {
    totalApplications: applicationsData.length,
    pendingApplications: applicationsData.filter((a) => a.status === "pending").length,
    approvedApplications: applicationsData.filter((a) => a.status === "approved").length,
    totalCandidates: candidatesData.length,
    activeCandidates: candidatesData.filter((c) => c.isActive).length,
    totalJobs: jobsData.length,
    openJobs: jobsData.filter((j) => j.status === "open").length,
  };

  const approvalRate = stats.totalApplications > 0 ? Math.round((stats.approvedApplications / stats.totalApplications) * 100) : 0;
  const avgTimeToHire = 28;
  const candidateQuality = 4.2;

  const applicationsOverTime = Array.from({ length: 30 }, (_, i) => {
    const date = new Date();
    date.setDate(date.getDate() - (29 - i));
    return { date: date.toLocaleDateString("en-US", { month: "short", day: "numeric" }), applications: Math.floor(Math.random() * 15) + 5, interviews: Math.floor(Math.random() * 8) + 2, offers: Math.floor(Math.random() * 3) + 1 };
  });

  const pipelineFunnelData = [
    { stage: "Applied", count: stats.totalApplications, percentage: 100 },
    { stage: "Screening", count: Math.floor(stats.totalApplications * 0.7), percentage: 70 },
    { stage: "Interview", count: Math.floor(stats.totalApplications * 0.4), percentage: 40 },
    { stage: "Offer", count: Math.floor(stats.totalApplications * 0.2), percentage: 20 },
    { stage: "Hired", count: Math.floor(stats.totalApplications * 0.15), percentage: 15 },
  ];

  const sourceData = [
    { source: "LinkedIn", candidates: 45, hired: 12 },
    { source: "Indeed", candidates: 38, hired: 8 },
    { source: "Referrals", candidates: 28, hired: 15 },
    { source: "Company Website", candidates: 22, hired: 6 },
    { source: "Other", candidates: 15, hired: 3 },
  ];

  const monthlyTrends = [
    { month: "Oct", applications: 120, interviews: 45, hires: 12 },
    { month: "Nov", applications: 135, interviews: 52, hires: 15 },
    { month: "Dec", applications: 110, interviews: 38, hires: 10 },
    { month: "Jan", applications: 145, interviews: 58, hires: 18 },
    { month: "Feb", applications: 155, interviews: 62, hires: 20 },
    { month: "Mar", applications: 168, interviews: 68, hires: 22 },
  ];

  const topJobs = jobsData.map((job) => {
    const client = clientsData.find((c) => c.id === job.clientId);
    return { title: job.title, client: client?.companyName || "Unknown", applications: job.statistics?.totalApplications || 0, filled: job.candidateIds?.length || 0 };
  }).sort((a, b) => b.applications - a.applications).slice(0, 5);

  return (<div className="flex flex-1 flex-col"><div className="@container/main flex flex-1 flex-col gap-2"><div className="flex flex-col gap-4 py-4 md:gap-6 md:py-6"><div className="px-4 lg:px-6"><div className="mb-6 flex items-center justify-between"><div><h2 className="text-2xl font-bold text-foreground">Analytics</h2><p className="text-sm text-muted-foreground mt-1">Track recruitment performance and identify trends</p></div><Select value={timeRange} onValueChange={setTimeRange}><SelectTrigger className="w-[180px]"><SelectValue /></SelectTrigger><SelectContent><SelectItem value="7">Last 7 days</SelectItem><SelectItem value="30">Last 30 days</SelectItem><SelectItem value="90">Last 90 days</SelectItem></SelectContent></Select></div></div><div className="*:data-[slot=card]:from-primary/5 *:data-[slot=card]:to-card dark:*:data-[slot=card]:bg-card grid grid-cols-1 gap-4 px-4 *:data-[slot=card]:bg-gradient-to-t *:data-[slot=card]:shadow-xs lg:px-6 @xl/main:grid-cols-2 @5xl/main:grid-cols-4"><Card className="@container/card"><CardHeader><CardDescription>Total Applications</CardDescription><CardTitle className="text-2xl font-semibold tabular-nums @[250px]/card:text-3xl">{stats.totalApplications}</CardTitle><CardAction><Badge variant="outline"><IconTrendingUp className="size-3" />+12.5%</Badge></CardAction></CardHeader><CardFooter className="flex-col items-start gap-1.5 text-sm"><div className="line-clamp-1 flex gap-2 font-medium"><IconFileText className="size-4" />{stats.pendingApplications} awaiting review</div><div className="text-muted-foreground">{stats.approvedApplications} approved this month</div></CardFooter></Card><Card className="@container/card"><CardHeader><CardDescription>Active Candidates</CardDescription><CardTitle className="text-2xl font-semibold tabular-nums @[250px]/card:text-3xl">{stats.activeCandidates}</CardTitle><CardAction><Badge variant="outline"><IconTrendingUp className="size-3" />+8.3%</Badge></CardAction></CardHeader><CardFooter className="flex-col items-start gap-1.5 text-sm"><div className="line-clamp-1 flex gap-2 font-medium"><IconUsers className="size-4" />{candidateQuality}/5 avg quality score</div><div className="text-muted-foreground">{stats.totalCandidates} total in pipeline</div></CardFooter></Card><Card className="@container/card"><CardHeader><CardDescription>Open Positions</CardDescription><CardTitle className="text-2xl font-semibold tabular-nums @[250px]/card:text-3xl">{stats.openJobs}</CardTitle><CardAction><Badge variant="outline"><IconBriefcase className="size-3" />Active</Badge></CardAction></CardHeader><CardFooter className="flex-col items-start gap-1.5 text-sm"><div className="line-clamp-1 flex gap-2 font-medium"><IconClock className="size-4" />{avgTimeToHire} days avg time to hire</div><div className="text-muted-foreground">{stats.totalJobs} total jobs posted</div></CardFooter></Card><Card className="@container/card"><CardHeader><CardDescription>Success Rate</CardDescription><CardTitle className="text-2xl font-semibold tabular-nums @[250px]/card:text-3xl">{approvalRate}%</CardTitle><CardAction><Badge variant="outline">{approvalRate > 50 ? <><IconTrendingUp className="size-3" />+{approvalRate - 50}%</> : <><IconTrendingDown className="size-3" />{approvalRate - 50}%</>}</Badge></CardAction></CardHeader><CardFooter className="flex-col items-start gap-1.5 text-sm"><div className="line-clamp-1 flex gap-2 font-medium"><IconCheck className="size-4" />Application to hire conversion</div><div className="text-muted-foreground">{stats.approvedApplications} successful placements</div></CardFooter></Card></div><div className="grid grid-cols-1 lg:grid-cols-2 gap-6 px-4 lg:px-6"><Card><CardHeader><CardTitle className="text-base">Application Activity</CardTitle><CardDescription>Daily applications, interviews and offers over the last 30 days</CardDescription></CardHeader><CardContent><ResponsiveContainer width="100%" height={300}><AreaChart data={applicationsOverTime}><defs><linearGradient id="colorApplications" x1="0" y1="0" x2="0" y2="1"><stop offset="5%" stopColor="hsl(var(--primary))" stopOpacity={0.3} /><stop offset="95%" stopColor="hsl(var(--primary))" stopOpacity={0} /></linearGradient><linearGradient id="colorInterviews" x1="0" y1="0" x2="0" y2="1"><stop offset="5%" stopColor="hsl(var(--chart-2))" stopOpacity={0.3} /><stop offset="95%" stopColor="hsl(var(--chart-2))" stopOpacity={0} /></linearGradient><linearGradient id="colorOffers" x1="0" y1="0" x2="0" y2="1"><stop offset="5%" stopColor="hsl(var(--chart-3))" stopOpacity={0.3} /><stop offset="95%" stopColor="hsl(var(--chart-3))" stopOpacity={0} /></linearGradient></defs><CartesianGrid strokeDasharray="3 3" stroke="hsl(var(--border))" opacity={0.3} /><XAxis dataKey="date" tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} tickLine={false} axisLine={false} /><YAxis tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} tickLine={false} axisLine={false} /><Tooltip contentStyle={{ backgroundColor: "hsl(var(--popover))", border: "1px solid hsl(var(--border))", borderRadius: "6px" }} /><Legend wrapperStyle={{ fontSize: 12 }} /><Area type="monotone" dataKey="applications" stroke="hsl(var(--primary))" fill="url(#colorApplications)" strokeWidth={2} /><Area type="monotone" dataKey="interviews" stroke="hsl(var(--chart-2))" fill="url(#colorInterviews)" strokeWidth={2} /><Area type="monotone" dataKey="offers" stroke="hsl(var(--chart-3))" fill="url(#colorOffers)" strokeWidth={2} /></AreaChart></ResponsiveContainer></CardContent></Card><Card><CardHeader><CardTitle className="text-base">Hiring Trends</CardTitle><CardDescription>Monthly applications, interviews and hires comparison</CardDescription></CardHeader><CardContent><ResponsiveContainer width="100%" height={300}><LineChart data={monthlyTrends}><CartesianGrid strokeDasharray="3 3" stroke="hsl(var(--border))" opacity={0.3} /><XAxis dataKey="month" tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} tickLine={false} axisLine={false} /><YAxis tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} tickLine={false} axisLine={false} /><Tooltip contentStyle={{ backgroundColor: "hsl(var(--popover))", border: "1px solid hsl(var(--border))", borderRadius: "6px" }} /><Legend wrapperStyle={{ fontSize: 12 }} /><Line type="monotone" dataKey="applications" stroke="hsl(var(--primary))" strokeWidth={2} dot={{ r: 4 }} /><Line type="monotone" dataKey="interviews" stroke="hsl(var(--chart-2))" strokeWidth={2} dot={{ r: 4 }} /><Line type="monotone" dataKey="hires" stroke="hsl(var(--chart-3))" strokeWidth={2} dot={{ r: 4 }} /></LineChart></ResponsiveContainer></CardContent></Card><Card><CardHeader><CardTitle className="text-base">Recruitment Pipeline</CardTitle><CardDescription>Candidate progression through hiring stages</CardDescription></CardHeader><CardContent><div className="space-y-4">{pipelineFunnelData.map((stage) => (<div key={stage.stage} className="space-y-2"><div className="flex items-center justify-between text-sm"><span className="font-medium">{stage.stage}</span><span className="text-muted-foreground">{stage.count} ({stage.percentage}%)</span></div><div className="h-10 rounded-md bg-muted overflow-hidden"><div className="h-full bg-gradient-to-r from-primary/80 to-primary flex items-center justify-center text-primary-foreground font-medium text-sm transition-all" style={{ width: `${stage.percentage}%` }}>{stage.percentage >= 30 && `${stage.count} candidates`}</div></div></div>))}</div></CardContent></Card><Card><CardHeader><CardTitle className="text-base">Source Effectiveness</CardTitle><CardDescription>Candidate sources ranked by quality and conversion</CardDescription></CardHeader><CardContent><ResponsiveContainer width="100%" height={300}><BarChart data={sourceData} layout="vertical"><CartesianGrid strokeDasharray="3 3" stroke="hsl(var(--border))" opacity={0.3} /><XAxis type="number" tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} /><YAxis dataKey="source" type="category" width={100} tick={{ fontSize: 12, fill: "hsl(var(--muted-foreground))" }} /><Tooltip contentStyle={{ backgroundColor: "hsl(var(--popover))", border: "1px solid hsl(var(--border))", borderRadius: "6px" }} /><Legend wrapperStyle={{ fontSize: 12 }} /><Bar dataKey="candidates" fill="hsl(var(--primary))" radius={[0, 4, 4, 0]} /><Bar dataKey="hired" fill="hsl(var(--chart-2))" radius={[0, 4, 4, 0]} /></BarChart></ResponsiveContainer></CardContent></Card></div><div className="px-4 lg:px-6"><Card><CardHeader><CardTitle className="text-base">Top Performing Jobs</CardTitle><CardDescription>Jobs with the highest application volume</CardDescription></CardHeader><CardContent><div className="space-y-4">{topJobs.map((job, index) => (<div key={index} className="flex items-center justify-between p-4 rounded-lg border bg-card hover:bg-accent/50 transition-colors"><div className="flex items-center gap-4"><div className="flex items-center justify-center w-8 h-8 rounded-full bg-primary/10 text-primary font-bold text-sm">{index + 1}</div><div><p className="font-medium">{job.title}</p><p className="text-sm text-muted-foreground">{job.client}</p></div></div><div className="flex items-center gap-6"><div className="text-right"><p className="text-sm font-medium">{job.applications}</p><p className="text-xs text-muted-foreground">Applications</p></div><div className="text-right"><p className="text-sm font-medium text-green-600 dark:text-green-400">{job.filled}</p><p className="text-xs text-muted-foreground">Filled</p></div><Badge variant="outline">{job.applications > 0 ? Math.round((job.filled / job.applications) * 100) : 0}% Success</Badge></div></div>))}</div></CardContent></Card></div></div></div></div>);
}
